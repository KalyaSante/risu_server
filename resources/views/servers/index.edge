@layout('layouts/dashboard')

@section('title')
  Serveurs
@end

@section('main')
  <div class="flex justify-between items-center mb-6">
    <div>
      <h1 class="text-3xl font-bold">🖥️ Serveurs</h1>
      <p class="text-base-content/70 mt-1">Gérez vos serveurs et leur infrastructure</p>
    </div>
    @include('components/action-button', { 
      href: route('servers.create'), 
      type: 'primary', 
      icon: '➕', 
      text: 'Nouveau serveur' 
    })
  </div>

  @if(servers.length === 0)
    <div class="card bg-base-100 shadow-xl">
      <div class="card-body text-center py-16">
        <div class="text-6xl mb-4">🖥️</div>
        <h2 class="text-2xl font-bold mb-2">Aucun serveur configuré</h2>
        <p class="text-base-content/70 mb-6">Commencez par ajouter votre premier serveur pour organiser vos services.</p>
        @include('components/action-button', { 
          href: route('servers.create'), 
          type: 'primary', 
          icon: '➕', 
          text: 'Ajouter un serveur' 
        })
      </div>
    </div>
  @else
    <!-- Filtres et recherche -->
    <div class="card bg-base-100 shadow-xl mb-6">
      <div class="card-body py-4">
        <div class="flex flex-wrap gap-4 items-center">
          <div class="form-control">
            <input type="text" id="search-servers" placeholder="Rechercher un serveur..." class="input input-bordered input-sm w-64">
          </div>
          <div class="form-control">
            <select id="filter-hebergeur" class="select select-bordered select-sm">
              <option value="">Tous les hébergeurs</option>
              @each(hebergeur in servers.map(s => s.hebergeur).filter((v, i, a) => a.indexOf(v) === i))
                <option value="{{ hebergeur }}">{{ hebergeur }}</option>
              @end
            </select>
          </div>
          <div class="flex-1"></div>
          <div class="stats stats-horizontal shadow">
            @include('components/stats-card', { 
              title: 'Total serveurs', 
              value: servers.length, 
              color: 'primary' 
            })
            @include('components/stats-card', { 
              title: 'Services actifs', 
              value: servers.reduce((acc, s) => acc + (s.services?.length || 0), 0),
              color: 'secondary' 
            })
          </div>
        </div>
      </div>
    </div>

    <!-- Grille des serveurs -->
    <div id="servers-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      @each(server in servers)
        <div class="server-card" data-name="{{ server.nom.toLowerCase() }}" data-hebergeur="{{ server.hebergeur }}">
          @include('components/server-card', { server })
        </div>
      @end
    </div>
  @endif
@end

@section('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('search-servers');
  const hebergeurFilter = document.getElementById('filter-hebergeur');
  const serverCards = document.querySelectorAll('.server-card');
  
  function filterServers() {
    const searchTerm = searchInput?.value.toLowerCase() || '';
    const selectedHebergeur = hebergeurFilter?.value || '';
    
    serverCards.forEach(card => {
      const name = card.dataset.name || '';
      const hebergeur = card.dataset.hebergeur || '';
      
      const matchesSearch = name.includes(searchTerm);
      const matchesHebergeur = !selectedHebergeur || hebergeur === selectedHebergeur;
      
      if (matchesSearch && matchesHebergeur) {
        card.style.display = 'block';
      } else {
        card.style.display = 'none';
      }
    });
  }
  
  searchInput?.addEventListener('input', filterServers);
  hebergeurFilter?.addEventListener('change', filterServers);
});
</script>
@end
