# ===================================
# Stage 1: Build stage
# ===================================
FROM node:20-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./

# Install ALL dependencies (including devDependencies needed for build)
RUN npm ci

# Copy source code
COPY . .

# Run the build command (needs devDependencies)
RUN npm run build

# ===================================
# Stage 2: Production stage for Cloudron
# ===================================
FROM cloudron/base:4.2.0

# Set the working directory
WORKDIR /app/code

# Install Node.js and npm (direct binary download)
RUN apt-get update && \
    apt-get install -y curl xz-utils && \
    NODE_VERSION="20.18.1" && \
    ARCH="$(dpkg --print-architecture)" && \
    case "${ARCH}" in \
        amd64) TARGETARCH='x64';; \
        arm64) TARGETARCH='arm64';; \
        *) echo "Unsupported architecture: ${ARCH}" && exit 1;; \
    esac && \
    curl -fsSLO "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${TARGETARCH}.tar.xz" && \
    tar -xJf "node-v${NODE_VERSION}-linux-${TARGETARCH}.tar.xz" -C /usr/local --strip-components=1 && \
    rm "node-v${NODE_VERSION}-linux-${TARGETARCH}.tar.xz" && \
    ln -s /usr/local/bin/node /usr/local/bin/nodejs && \
    npm install -g npm@latest && \
    apt-get remove -y xz-utils && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package.json package-lock.json ./

# Install ONLY production dependencies
RUN npm ci --omit=dev && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/build ./build

# Copy other necessary files
COPY --from=builder /app/public ./public

# Create necessary directories with proper permissions
RUN mkdir -p /app/data /run/app && \
    chown -R cloudron:cloudron /app/data /run/app

# Copy the start script
COPY start.sh /app/code/
RUN chmod +x /app/code/start.sh

# Expose the port
EXPOSE 3333

# Switch to cloudron user
USER cloudron

# Define the command to run the application
CMD [ "/app/code/start.sh" ]
