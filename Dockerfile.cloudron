# ===================================
# Stage 1: Build stage
# ===================================
FROM node:20-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./

# Install ALL dependencies (including devDependencies needed for build)
RUN npm ci

# Copy source code
COPY . .

# Run the build command (needs devDependencies)
RUN npm run build

# ===================================
# Stage 2: Production stage for Cloudron
# ===================================
FROM cloudron/base:4.2.0

# Set the working directory
WORKDIR /app/code

# Install Node.js and npm
RUN apt-get update && \
    apt-get install -y curl gnupg && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && \
    apt-get install -y nodejs && \
    npm install -g npm@latest && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package.json package-lock.json ./

# Install ONLY production dependencies
RUN npm ci --omit=dev && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/build ./build

# Copy other necessary files
COPY --from=builder /app/public ./public

# Create necessary directories with proper permissions
RUN mkdir -p /app/data /run/app && \
    chown -R cloudron:cloudron /app/data /run/app

# Copy the start script
COPY start.sh /app/code/
RUN chmod +x /app/code/start.sh

# Expose the port
EXPOSE 3333

# Switch to cloudron user
USER cloudron

# Define the command to run the application
CMD [ "/app/code/start.sh" ]
